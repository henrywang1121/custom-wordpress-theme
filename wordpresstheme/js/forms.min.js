const gtmFormSubmission = (e, a, t) => {
  dataLayer.push({
    event: 'form_submission',
    event_action: e,
    event_category: a,
    event_label: t,
  });
};
jQuery(function (e) {
  function a(a) {
    e('body').addClass('modal-show'), a.addClass('show');
    const t = a.find('.grecaptcha');
    grecaptcha.ready(function () {
      const e = grecaptcha.render(t[0], { sitekey: customForms.sitekey });
      t.data('recaptchaId', e);
    }),
      a.find('.form--sales').validate(l),
      a.find('.form--parts').validate(r),
      a.find('.form--contact').validate(i),
      a.find('.form--special-order').validate(c),
      a.find('.form--custom-order').validate(n);
  }
  function t(a) {
    e('body').removeClass('modal-show'),
      a.removeClass('show'),
      a.find('form').trigger('reset');
  }
  (e.validator.methods.email = function (e, a) {
    return this.optional(a) || /[a-z0-9]+@[a-z0-9]+\.[a-z0-9]+/.test(e);
  }),
    e('#tradeIn').on('change', function () {
      e('#tradeInForm').removeClass('show'),
        e(this).is(':checked') && e('#tradeInForm').addClass('show');
    }),
    e('[data-toggle="modal"]').on('click', function (l) {
      l.preventDefault();
      const r = e(this).data('target');
      if (void 0 !== e(this).data('modalTemplatePart')) {
        e(r).remove();
        const l = e(this).data('modalId'),
          i = e(this).data('modalTemplatePart');
        e.ajax({
          dataType: 'html',
          method: 'POST',
          url: customForms.ajaxurl,
          data: {
            action: 'custom_get_modal_callback',
            _wpnonce: customForms._wpnonce,
            id: l,
            templatePart: i,
          },
        }).done(function (l) {
          l.length &&
            (e('body').append(l),
            a(e(r)),
            e('.modal__close').on('click', function () {
              t(e(this).parents('.modal'));
            }));
        });
      } else
        a(e(r)),
          e('.modal__close').on('click', function () {
            t(e(this).parents('.modal'));
          });
    });
  const l = {
    rules: {
      firstName: 'required',
      lastName: 'required',
      email: { required: !0, email: !0 },
      phone: { phoneUS: !0 },
      preferredContact: 'required',
    },
    messages: {
      firstName: customForms.firstNameRequired,
      lastName: customForms.lastNameRequired,
      email: {
        required: customForms.emailRequired,
        email: customForms.emailInvalid,
      },
      phone: { phoneUS: customForms.phoneInvalid },
      preferredContact: customForms.preferredContactRequired,
    },
    errorElement: 'div',
    submitHandler: function (a) {
      const t = e(a),
        l = {
          cat: e('#gaCat').val(),
          action: 'Submit',
          label: e('#gaLabel').val(),
        },
        r = t.find('.grecaptcha').data('recaptchaId'),
        i = {
          action: 'custom_sales_form_submit_callback',
          interest: e('input[name=interest]:checked').val(),
          firstName: e('#firstName').val(),
          lastName: e('#lastName').val(),
          phone: e('#phone').val(),
          email: e('#email').val(),
          preferredContact: e('#preferredContact').val(),
          comments: e('#comments').val(),
          timeframe: e('input[name=timeframe]:checked').val(),
          gRecaptchaResponse: grecaptcha.getResponse(r),
          vehicleId: e('#vehicleId').val(),
          _wpnonce: customForms._wpnonce,
        };
      return (
        e('#tradeIn').prop('checked') &&
          ((i.tradeInYear = e('#tradeInYear').val()),
          (i.tradeInMake = e('#tradeInMake').val()),
          (i.tradeInModel = e('#tradeInModel').val()),
          (i.tradeInMiles = e('#tradeInMiles').val())),
        i.gRecaptchaResponse &&
          (t.find('button[type=submit] .buttonSpinner').show(),
          e
            .ajax({
              dataType: 'json',
              method: 'POST',
              url: customForms.ajaxurl,
              data: i,
            })
            .done(function (e) {
              let a = '';
              !0 === e.success
                ? (sd('dataLayer', {
                    leadId: e.lead_id,
                    formType: 'Check Availability',
                    events: 'formSubmission',
                  }),
                  sd('send'),
                  gtmFormSubmission(l.action, l.cat, l.label),
                  (a = '.formResponse--success'))
                : (a = '.formResponse--fail');
              const r = t.height(),
                i = t.find(a);
              i.height(r), t.replaceWith(i), i.addClass('show');
            })),
        !1
      );
    },
  };
  e('.form--sales').validate(l);
  const r = {
    rules: {
      firstName: 'required',
      lastName: 'required',
      email: { required: !0, email: !0 },
      phone: { phoneUS: !0 },
    },
    messages: {
      firstName: customForms.firstNameRequired,
      lastName: customForms.lastNameRequired,
      email: {
        required: customForms.emailRequired,
        email: customForms.emailInvalid,
      },
      phone: customForms.phoneRequired,
    },
    errorElement: 'div',
    submitHandler: function (a) {
      const t = e(a),
        l = 'Parts',
        r = 'Submit',
        i = 'Parts Page Form Submit',
        o = t.find('.grecaptcha').data('recaptchaId'),
        c = {
          action: 'custom_parts_form_submit_callback',
          firstName: e('#firstName').val(),
          lastName: e('#lastName').val(),
          phone: e('#phone').val(),
          email: e('#email').val(),
          partsYear: e('#partsYear').val(),
          partsMake: e('#partsMake').val(),
          partsModel: e('#partsModel').val(),
          partsTrim: e('#partsTrim').val(),
          partsTransmission: e('#partsTransmission').val(),
          gRecaptchaResponse: grecaptcha.getResponse(o),
          _wpnonce: customForms._wpnonce,
        },
        n = [],
        s = e('.parts__list__part').length;
      for (let a = 0; a < s; a++) {
        const t = {};
        (t.name = e('#partName' + (a + 1)).val()),
          (t.number = e('#partNumber' + (a + 1)).val()),
          (t.description = e('#partDescription' + (a + 1)).val()),
          (t.installation = e('#partInstallation' + (a + 1)).prop('checked')),
          n.push(t);
      }
      return (
        n.length && (c.parts = n),
        c.gRecaptchaResponse &&
          (t.find('button[type=submit] .buttonSpinner').show(),
          e
            .ajax({
              dataType: 'json',
              method: 'POST',
              url: customForms.ajaxurl,
              data: c,
            })
            .done(function (e) {
              let a = '';
              !0 === e.success
                ? (sd('dataLayer', {
                    leadId: e.lead_id,
                    formType: 'Parts',
                    events: 'formSubmission',
                  }),
                  sd('send'),
                  gtmFormSubmission(r, l, i),
                  (a = '.formResponse--success'))
                : (a = '.formResponse--fail');
              const o = t.height(),
                c = t.find(a);
              c.height(o), t.replaceWith(c), c.addClass('show');
            })),
        !1
      );
    },
  };
  e('#addPart').on('click', function () {
    const a = e('.parts__list__part').length + 1,
      t = e('.parts__list__part').first().clone(),
      l = t.data('partIndex');
    e('.parts__list__part').prop('open', !1),
      t.prop('open', !0),
      t.attr('data-part-index', a),
      t.find('#partIndex').text(a),
      t.find('label').each(function () {
        const t = e(this).attr('for').replace(l, a);
        e(this).attr('for', t);
      }),
      t.find('input, textarea').each(function () {
        'checkbox' === e(this).attr('type')
          ? e(this).prop('checked', !1)
          : e(this).val('');
        const t = e(this).attr('id').replace(l, a),
          r = e(this).attr('name').replace(l, a);
        e(this).attr('id', t).attr('name', r);
      }),
      e('#partsList').append(t);
  }),
    e('.form--parts').on('reset', function () {
      e('.parts__list__part:not(:first)').remove();
    }),
    e('.form--parts').validate(r);
  const i = {
    rules: {
      firstName: 'required',
      lastName: 'required',
      email: { required: !0, email: !0 },
      phone: { phoneUS: !0 },
      preferredContact: 'required',
    },
    messages: {
      firstName: customForms.firstNameRequired,
      lastName: customForms.lastNameRequired,
      email: {
        required: customForms.emailRequired,
        email: customForms.emailInvalid,
      },
      phone: customForms.phoneRequired,
      preferredContact: customForms.preferredContactRequired,
    },
    errorElement: 'div',
    submitHandler: function (a) {
      const t = e(a),
        l = 'Contact',
        r = 'Submit',
        i = 'Contact Form Submit',
        o = t.find('.grecaptcha').data('recaptchaId'),
        c = {
          action: 'custom_contact_form_submit_callback',
          firstName: e('#firstName').val(),
          lastName: e('#lastName').val(),
          phone: e('#phone').val(),
          email: e('#email').val(),
          department: e('#department').val(),
          comments: e('#comments').val(),
          gRecaptchaResponse: grecaptcha.getResponse(o),
          _wpnonce: customForms._wpnonce,
        };
      return (
        c.gRecaptchaResponse &&
          (t.find('button[type=submit] .buttonSpinner').show(),
          e
            .ajax({
              dataType: 'json',
              method: 'POST',
              url: customForms.ajaxurl,
              data: c,
            })
            .done(function (e) {
              let a = '';
              !0 === e.success
                ? (sd('dataLayer', {
                    leadId: e.lead_id,
                    formType: 'General Contact',
                    events: 'formSubmission',
                  }),
                  sd('send'),
                  gtmFormSubmission(r, l, i),
                  (a = '.formResponse--success'))
                : (a = '.formResponse--fail');
              const o = t.height(),
                c = t.find(a);
              c.height(o), t.replaceWith(c), c.addClass('show');
            })),
        !1
      );
    },
  };
  e('.form--contact').validate(i);
  const o = {
    rules: {
      firstName: 'required',
      lastName: 'required',
      phone: { phoneUS: !0 },
      email: { required: !0, email: !0 },
      preferredContact: 'required',
      vehicleVIN: { minlength: 17, maxlength: 17 },
    },
    messages: {
      firstName: customForms.firstNameRequired,
      lastName: customForms.lastNameRequired,
      phone: { phoneUS: customForms.phoneInvalid },
      email: {
        required: customForms.emailRequired,
        email: customForms.emailInvalid,
      },
      preferredContact: customForms.preferredContactRequired,
      vehicleVIN: {
        minlength: customForms.vehicleVINInvalid,
        maxlength: customForms.vehicleVINInvalid,
      },
    },
    errorElement: 'div',
    submitHandler: function (a) {
      console.log('submit');
      const t = e(a),
        l = 'Contact',
        r = 'Submit',
        i = 'Contact Form Submit',
        o = new FormData(a);
      return (
        o.append('action', 'custom_value_your_car_form_submit_callback'),
        o.append('_wpnonce', customForms._wpnonce),
        console.log('submit'),
        o.get('g-recaptcha-response') &&
          (console.log('recaptcha'),
          t.find('button[type=submit] .buttonSpinner').show(),
          e
            .ajax({
              dataType: 'json',
              method: 'POST',
              contentType: !1,
              processData: !1,
              url: customForms.ajaxurl,
              data: o,
            })
            .done(function (e) {
              console.log(e);
              let a = '';
              !0 === e.success
                ? (sd('dataLayer', {
                    leadId: e.lead_id,
                    formType: 'General Contact',
                    events: 'formSubmission',
                  }),
                  sd('send'),
                  gtmFormSubmission(r, l, i),
                  (a = '.formResponse--success'))
                : (a = '.formResponse--fail');
              const o = t.height(),
                c = t.find(a);
              c.height(o), t.replaceWith(c), c.addClass('show');
            })),
        !1
      );
    },
  };
  e('.form--value-your-car').validate(o);
  const c = {
    rules: {
      firstName: 'required',
      lastName: 'required',
      email: { required: !0, email: !0 },
      zip: 'required',
    },
    messages: {
      firstName: customForms.firstNameRequired,
      lastName: customForms.lastNameRequired,
      email: {
        required: customForms.emailRequired,
        email: customForms.emailInvalid,
      },
      zip: customForms.zipCodeRequired,
    },
    errorElement: 'div',
    submitHandler: function (a) {
      const t = e(a),
        l = {
          cat: e('#specialOrderGaCat').val(),
          action: 'Submit',
          label: 'Special Order Form Submit',
        },
        r = t.find('.grecaptcha').data('recaptchaId'),
        i = {
          action: 'custom_special_order_form_submit_callback',
          firstName: e('#specialOrderFirstName').val(),
          lastName: e('#specialOrderLastName').val(),
          email: e('#specialOrderEmail').val(),
          zip: e('#specialOrderZip').val(),
          comments: e('#specialOrderComments').val(),
          vehicleYear: e('#specialOrderVehicleYear').val(),
          vehicleMake: e('#specialOrderVehicleMake').val(),
          vehicleModel: e('#specialOrderVehicleModel').val(),
          vehicleTrim: e('#specialOrderVehicleTrim').val(),
          leadSourceId: e('#specialOrderLeadSourceId').val(),
          leadName: e('#specialOrderLeadName').val(),
          gRecaptchaResponse: grecaptcha.getResponse(r),
          _wpnonce: customForms._wpnonce,
        };
      return (
        i.gRecaptchaResponse &&
          (t.find('button[type=submit] .buttonSpinner').show(),
          e
            .ajax({
              dataType: 'json',
              method: 'POST',
              url: customForms.ajaxurl,
              data: i,
            })
            .done(function (e) {
              let a = '';
              !0 === e.success
                ? (sd('dataLayer', {
                    leadId: e.lead_id,
                    formType: 'General Contact',
                    events: 'formSubmission',
                  }),
                  sd('send'),
                  gtmFormSubmission(l.action, l.cat, l.label),
                  (a = '.formResponse--success'))
                : (a = '.formResponse--fail');
              const r = t.height(),
                i = t.find(a);
              i.height(r), t.replaceWith(i), i.addClass('show');
            })),
        !1
      );
    },
  };
  e('.form--special-order').validate(c);
  const n = {
      rules: {
        firstName: 'required',
        lastName: 'required',
        email: { required: !0, email: !0 },
        phone: { phoneUS: !0 },
        confirmAge: 'required',
      },
      messages: {
        firstName: customForms.firstNameRequired,
        lastName: customForms.lastNameRequired,
        email: {
          required: customForms.emailRequired,
          email: customForms.emailInvalid,
        },
        phone: { phoneUS: customForms.phoneInvalid },
        confirmAge: customForms.confirmAgeRequired,
      },
      errorElement: 'div',
      submitHandler: function (a) {
        const t = e(a),
          l = 'Custom Order',
          r = 'Submit',
          i = 'Custom Order Form Submit',
          o = t.find('.grecaptcha').data('recaptchaId'),
          c = {
            action: 'custom_custom_order_form_submit_callback',
            firstName: e('#firstName').val(),
            lastName: e('#lastName').val(),
            email: e('#email').val(),
            phone: e('#phone').val(),
            year: e('#year').val(),
            model: e('#model').val(),
            trim: e('#trim').val(),
            extColor: e('#extColor').val(),
            intColor: e('#intColor').val(),
            confirmAge: e('#confirmAge').prop('checked'),
            gRecaptchaResponse: grecaptcha.getResponse(o),
            _wpnonce: customForms._wpnonce,
          };
        c.gRecaptchaResponse &&
          (t.find('button[type=submit] .buttonSpinner').show(),
          e
            .ajax({
              dataType: 'json',
              method: 'POST',
              url: customForms.ajaxurl,
              data: c,
            })
            .done(function (e) {
              let a = '';
              !0 === e.success
                ? (gtmFormSubmission(r, l, i), (a = '.formResponse--success'))
                : (a = '.formResponse--fail');
              const o = t.height(),
                c = t.find(a);
              c.height(o), t.replaceWith(c), c.addClass('show');
            }));
      },
    },
    s = {
      2022: {
        'CX-5': {
          '2.5 S': {
            extColor: [
              'Eternal Blue Mica',
              'Jet Black Mica',
              'Snowflake White Pearl Mica',
              'Soul Red Crystal Metallic',
            ],
            intColor: ['Black Cloth'],
          },
          '2.5 S Select': {
            extColor: [
              'Deep Crystal Blue Mica',
              'Eternal Blue Mica',
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Snowflake White Pearl Mica',
              'Sonic Silver Metallic',
              'Soul Red Crystal Metallic',
            ],
            intColor: ['Black Leatherette', 'Silk Beige Leatherette'],
          },
          '2.5 S Preferred': {
            extColor: [
              'Deep Crystal Blue Mica',
              'Eternal Blue Mica',
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Snowflake White Pearl Mica',
              'Sonic Silver Metallic',
              'Soul Red Crystal Metallic',
            ],
            intColor: ['Black Leather'],
          },
          '2.5 S Carbon Edition': {
            extColor: ['Polymetal Gray Metallic'],
            intColor: ['Red Leather', 'Black Leather'],
          },
          '2.5 S Premium': {
            extColor: [
              'Deep Crystal Blue Mica',
              'Eternal Blue Mica',
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Snowflake White Pearl Mica',
              'Sonic Silver Metallic',
              'Soul Red Crystal Metallic',
            ],
            intColor: ['Black Leather'],
          },
          '2.5 S Premium Plus': {
            extColor: [
              'Deep Crystal Blue Mica',
              'Eternal Blue Mica',
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Snowflake White Pearl Mica',
              'Sonic Silver Metallic',
              'Soul Red Crystal Metallic',
            ],
            intColor: ['Black Leather', 'Parchment Leather'],
          },
          '2.5 S Turbo': {
            extColor: [
              'Deep Crystal Blue Mica',
              'Eternal Blue Mica',
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Snowflake White Pearl Mica',
              'Sonic Silver Metallic',
              'Soul Red Crystal Metallic',
            ],
            intColor: ['Black Leather'],
          },
          '2.5 S Turbo Signature': {
            extColor: [
              'Deep Crystal Blue Mica',
              'Eternal Blue Mica',
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Snowflake White Pearl Mica',
              'Soul Red Crystal Metallic',
            ],
            intColor: ['Caturra Brown Nappa Leather'],
          },
        },
        'CX-9': {
          Sport: {
            extColor: [
              'Deep Crystal Blue Mica',
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Snowflake White Pearl Mica',
            ],
            intColor: ['Black Cloth'],
          },
          Touring: {
            extColor: [
              'Deep Crystal Blue Mica',
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Snowflake White Pearl Mica',
              'Sonic Silver Metallic',
              'Soul Red Crystal Metallic',
            ],
            intColor: ['Black Leather', 'Sand Leather'],
          },
          'Touring Plus': {
            extColor: [
              'Deep Crystal Blue Mica',
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Snowflake White Pearl Mica',
              'Sonic Silver Metallic',
              'Soul Red Crystal Metallic',
            ],
            intColor: ['Black Leather', 'Sand Leather'],
          },
          'Grand Touring': {
            extColor: [
              'Deep Crystal Blue Mica',
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Snowflake White Pearl Mica',
              'Sonic Silver Metallic',
              'Soul Red Crystal Metallic',
            ],
            intColor: ['Black Leather', 'Sand Leather'],
          },
          Signature: {
            extColor: [
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Snowflake White Pearl Mica',
              'Soul Red Crystal Metallic',
            ],
            intColor: [
              'Deep Chestnut Nappa Leather',
              'Parchment Nappa Leather',
            ],
          },
          '': {
            extColor: ['Polymetal Gray Metallic'],
            intColor: ['Red Leather'],
          },
        },
        'CX-30': {
          '2.5 S': {
            extColor: [
              'Deep Crystal Blue Mica',
              'Jet Black Mica',
              'Snowflake White Pearl Mica',
            ],
            intColor: ['Black Cloth'],
          },
          Select: {
            extColor: [
              'Deep Crystal Blue Mica',
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Platinum Quartz Metallic',
              'Snowflake White Pearl Mica',
              'Soul Red Crystal Metallic',
            ],
            intColor: ['Black Leatherette'],
          },
          Preferred: {
            extColor: [
              'Deep Crystal Blue Mica',
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Platinum Quartz Metallic',
              'Snowflake White Pearl Mica',
              'Soul Red Crystal Metallic',
            ],
            intColor: ['Black Leatherette', 'Greige Leatherette'],
          },
          Premium: {
            extColor: [
              'Deep Crystal Blue Mica',
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Platinum Quartz Metallic',
              'Snowflake White Pearl Mica',
              'Soul Red Crystal Metallic',
            ],
            intColor: ['Black Leather', 'White Leather'],
          },
          '2.5 Turbo': {
            extColor: [
              'Deep Crystal Blue Mica',
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Platinum Quartz Metallic',
              'Polymetal Gray Metallic',
              'Snowflake White Pearl Mica',
              'Soul Red Crystal Metallic',
            ],
            intColor: ['Black Leatherette', 'Greige Leatherette'],
          },
          '2.5 Turbo Premium': {
            extColor: [
              'Deep Crystal Blue Mica',
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Platinum Quartz Metallic',
              'Polymetal Gray Metallic',
              'Snowflake White Pearl Mica',
              'Soul Red Crystal Metallic',
            ],
            intColor: ['Black Leather', 'White Leather'],
          },
          '2.5 Turbo Premium Plus': {
            extColor: [
              'Deep Crystal Blue Mica',
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Platinum Quartz Metallic',
              'Polymetal Gray Metallic',
              'Snowflake White Pearl Mica',
              'Soul Red Crystal Metallic',
            ],
            intColor: ['Black Leather'],
          },
          'Carbon Edition': {
            extColor: ['Polymetal Gray Metallic'],
            intColor: ['Red Leather'],
          },
        },
        'car3 Sedan': {
          '2.0': {
            extColor: ['Deep Crystal Blue Mica', 'Jet Black Mica'],
            intColor: ['Black Cloth'],
          },
          '2.5 S': {
            extColor: [
              'Deep Crystal Blue Mica',
              'Jet Black Mica',
              'Snowflake White Pearl Mica',
            ],
            intColor: ['Black Cloth'],
          },
          Select: {
            extColor: [
              'Deep Crystal Blue Mica',
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Platinum Quartz Metallic',
              'Snowflake White Pearl Mica',
              'Soul Red Crystal Metallic',
            ],
            intColor: ['Black Leatherette '],
          },
          Preferred: {
            extColor: [
              'Deep Crystal Blue Mica',
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Platinum Quartz Metallic',
              'Snowflake White Pearl Mica',
              'Soul Red Crystal Metallic',
            ],
            intColor: ['Black Leatherette ', 'Greige Leatherette '],
          },
          Premium: {
            extColor: [
              'Deep Crystal Blue Mica',
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Platinum Quartz Metallic',
              'Snowflake White Pearl Mica',
              'Soul Red Crystal Metallic',
            ],
            intColor: ['Black Leather', 'White Leather'],
          },
          'Carbon Edition': {
            extColor: ['Polymetal Gray Metallic'],
            intColor: ['Red Leather'],
          },
          '2.5 Turbo': {
            extColor: [
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Platinum Quartz Metallic',
              'Polymetal Gray Metallic',
              'Snowflake White Pearl Mica',
              'Soul Red Crystal Metallic',
            ],
            intColor: ['Black Leatherette', 'Greige Leatherette'],
          },
          '2.5 Turbo Premium Plus': {
            extColor: [
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Platinum Quartz Metallic',
              'Polymetal Gray Metallic',
              'Snowflake White Pearl Mica',
              'Soul Red Crystal Metallic',
            ],
            intColor: ['Black Leather', 'White Leather'],
          },
        },
        'car3 Hatchback': {
          '2.5 S': {
            extColor: [
              'Deep Crystal Blue Mica',
              'Jet Black Mica',
              'Snowflake White Pearl Mica',
            ],
            intColor: ['Black Cloth'],
          },
          Select: {
            extColor: [
              'Deep Crystal Blue Mica',
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Platinum Quartz Metallic',
              'Snowflake White Pearl Mica',
              'Soul Red Crystal Metallic',
            ],
            intColor: ['Black Leatherette '],
          },
          Preferred: {
            extColor: [
              'Deep Crystal Blue Mica',
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Platinum Quartz Metallic',
              'Snowflake White Pearl Mica',
              'Soul Red Crystal Metallic',
            ],
            intColor: ['Black Leatherette', 'Greige Leatherette'],
          },
          Premium: {
            extColor: [
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Polymetal Gray Metallic',
              'Snowflake White Pearl Mica',
            ],
            intColor: ['Black Leather', 'Red Leather'],
          },
          'Carbon Edition': {
            extColor: ['Polymetal Gray Metallic'],
            intColor: ['Red Leather'],
          },
          '2.5 Turbo': {
            extColor: [
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Polymetal Gray Metallic',
              'Snowflake White Pearl Mica',
              'Soul Red Crystal Metallic',
            ],
            intColor: ['Black Leatherette', 'Greige Leatherette'],
          },
          '2.5 Turbo Premium Plus': {
            extColor: [
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Platinum Quartz Metallic',
              'Polymetal Gray Metallic',
              'Snowflake White Pearl Mica',
              'Soul Red Crystal Metallic',
            ],
            intColor: ['Black Leather'],
          },
        },
        'MX-5 Miata': {
          Sport: {
            extColor: ['Jet Black Mica', 'Soul Red Crystal Metallic'],
            intColor: ['Black Cloth'],
          },
          Club: {
            extColor: [
              'Deep Crystal Blue Mica',
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Polymetal Gray Metallic',
              'Snowflake White Pearl Mica',
              'Soul Red Crystal Metallic',
            ],
            intColor: ['Black Cloth with Light Gray Stitching'],
          },
          'Grand Touring': {
            extColor: [
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Snowflake White Pearl Mica',
              'Soul Red Crystal Metallic',
              'Machine Gray Metallic',
              'Snowflake White Pearl Mica',
              'Platinum Quartz Metallic',
            ],
            intColor: ['Black Leather', 'Terracotta Napa Leather'],
          },
        },
        'MX-5 Miata RF': {
          Club: {
            extColor: [
              'Deep Crystal Blue Mica',
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Platinum Quartz Metallic',
              'Polymetal Gray Metallic',
              'Snowflake White Pearl Mica',
              'Soul Red Crystal Metallic',
            ],
            intColor: ['Heated Recaro Sport Seats'],
          },
          'Grand Touring': {
            extColor: ['Machine Gray Metallic', 'Snowflake White Pearl Mica'],
            intColor: ['Terracotta Napa Leather', 'Black Leather'],
          },
        },
        'MX-30': {
          EV: {
            extColor: [
              'Ceramic Metallic',
              'Jet Black Mica',
              'Polymetal Gray Metallic',
            ],
            intColor: ['Black Leatherette with Pure White Trim'],
          },
          'Premium Plus': {
            extColor: [
              'Soul Red Metallic (3-Tone)',
              'Ceramic Metallic (3-Tone)',
              'Polymetal Gray Metallic (3-Tone)',
              'Machine Gray Metallic',
            ],
            intColor: [
              'Black Leatherette with Pure White Trim',
              'Black Leatherette with Vintage Brown Trim',
            ],
          },
        },
      },
      2023: {
        'CX-50': {
          '2.5 S': {
            extColor: [
              'Ingot Blue Metallic',
              'Jet Black Mica',
              'Polymetal Gray Metallic',
            ],
            intColor: ['Black Cloth'],
          },
          '2.5 S Select': {
            extColor: [
              'Ingot Blue Metallic',
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Polymetal Gray Metallic',
              'Soul Red Crystal Metallic',
              'Wind Chill Pearl',
            ],
            intColor: ['Black Leatherette with Gray'],
          },
          '2.5 S Preferred': {
            extColor: [
              'Ingot Blue Metallic',
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Polymetal Gray Metallic',
              'Soul Red Crystal Metallic',
              'Wind Chill Pearl',
            ],
            intColor: ['Black Leatherette with Gray'],
          },
          '2.5 S Preferred Plus': {
            extColor: [
              'Ingot Blue Metallic',
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Polymetal Gray Metallic',
              'Soul Red Crystal Metallic',
              'Wind Chill Pearl',
            ],
            intColor: ['Black Leatherette with Gray'],
          },
          '2.5 S Premium': {
            extColor: [
              'Ingot Blue Metallic',
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Polymetal Gray Metallic',
              'Soul Red Crystal Metallic',
              'Wind Chill Pearl',
            ],
            intColor: ['Black Leather with Brown'],
          },
          '2.5 S Premium Plus': {
            extColor: [
              'Ingot Blue Metallic',
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Polymetal Gray Metallic',
              'Soul Red Crystal Metallic',
              'Wind Chill Pearl',
            ],
            intColor: ['Black Leather with Brown'],
          },
          '2.5 Turbo': {
            extColor: [
              'Ingot Blue Metallic',
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Polymetal Gray Metallic',
              'Soul Red Crystal Metallic',
              'Wind Chill Pearl',
            ],
            intColor: ['Black Leather with Brown', 'Terracotta Leather'],
          },
          '2.5 Turbo Premium': {
            extColor: [
              'Ingot Blue Metallic',
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Polymetal Gray Metallic',
              'Soul Red Crystal Metallic',
              'Wind Chill Pearl',
              'Zircon Sand Metallic',
            ],
            intColor: ['Black Leather with Brown', 'Terracotta Leather'],
          },
          '2.5 Turbo Premium Plus': {
            extColor: [
              'Ingot Blue Metallic',
              'Jet Black Mica',
              'Machine Gray Metallic',
              'Polymetal Gray Metallic',
              'Soul Red Crystal Metallic',
              'Wind Chill Pearl',
              'Zircon Sand Metallic',
            ],
            intColor: ['Black Leather with Brown', 'Terracotta Leather'],
          },
        },
      },
    };
  let m = '<option value="">Any</option>';
  Object.keys(s).forEach((e) => {
    m += '<option value="' + e + '">' + e + '</option>';
  }),
    e('#year').html(m),
    e('#year').on('change', function () {
      const a = e(this).val();
      if (
        (e('#model, #trim, #extColor, #intColor')
          .html('<option value="">Any</option>')
          .prop('disabled', !0),
        a)
      ) {
        let t = '<option value="">Any</option>';
        Object.keys(s[a]).forEach((e) => {
          t += '<option value="' + e + '">' + e + '</option>';
        }),
          e('#model').html(t).prop('disabled', !1);
      }
    }),
    e('#model').on('change', function () {
      const a = e('#year').val(),
        t = e(this).val();
      if (
        (e('#trim, #extColor, #intColor')
          .html('<option value="">Any</option>')
          .prop('disabled', !0),
        t)
      ) {
        let l = '<option value="">Any</option>';
        Object.keys(s[a][t]).forEach((e) => {
          l += '<option value="' + e + '">' + e + '</option>';
        }),
          e('#trim').html(l).prop('disabled', !1);
      }
    }),
    e('#trim').change(function () {
      const a = e('#year').val(),
        t = e('#model').val(),
        l = e(this).val();
      if (
        (e('#extColor, #intColor')
          .html('<option value="">Any</option>')
          .prop('disabled', !0),
        l)
      ) {
        let r = '<option value="">Any</option>',
          i = '<option value="">Any</option>';
        s[a][t][l].extColor.forEach((e) => {
          r += '<option value="' + e + '">' + e + '</option>';
        }),
          s[a][t][l].intColor.forEach((e) => {
            i += '<option value="' + e + '">' + e + '</option>';
          }),
          e('#extColor').html(r).prop('disabled', !1),
          e('#intColor').html(i).prop('disabled', !1);
      }
    }),
    e('.form--custom-order').validate(n);
  const d = e('#formPaymentCalculator');
  function u() {
    if (d.valid()) {
      const a = parseInt(d.find('#salePrice').val()),
        t = d.find('#downPayment'),
        l = t.val() ? parseInt(t.val()) : 0,
        r = d.find('#apr'),
        i = r.val() ? parseFloat(r.val()) : 0,
        o = d.find('#term').val();
      e.ajax({
        dataType: 'json',
        url: customForms.ajaxurl,
        method: 'POST',
        data: {
          action: 'custom_ajax_calculate_monthly_payments',
          _wpnonce: customForms._wpnonce,
          salePrice: a,
          downPayment: l,
          apr: i,
          term: o,
        },
      }).done(function (a) {
        (a.payment = 0 === a.payment ? 1 : a.payment),
          a.payment && e('#formResultsMonthlyPaymentAmount').text(a.payment);
      });
    }
  }
  d.validate({
    rules: {
      salePrice: { required: !0, digits: !0, min: 1 },
      downPayment: { digits: !0, min: 0 },
      apr: { number: !0, min: 0 },
      term: { required: !0 },
    },
    messages: {
      salePrice: {
        required: 'Sale Price is required.',
        digits: 'Enter only digits for Sale Price.',
        min: 'Sale Price must be greater than zero.',
      },
      downPayment: {
        digits: 'Enter only digits for Down Payment.',
        min: 'Down Payment cannot be less than zero.',
      },
      apr: {
        number: 'Enter APR as a decimal value.',
        min: 'APR cannot be less than zero.',
      },
      term: { required: 'A payment term is required.' },
    },
    errorLabelContainer: '#formErrors ul',
    wrapper: 'li',
  }),
    d.find('#salePrice, #downPayment, #apr').on('keyup change', u),
    d.find('#term').on('change', u),
    d.on('reset', function () {
      e('#formResultsMonthlyPaymentAmount').text('___');
    });
});
